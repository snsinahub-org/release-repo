name: release-action-number-2

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
       
jobs:
  
          
  build-artifact:
    name: "build artifact"
    runs-on: "ubuntu-latest"
    
    
    
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir staging && cp target/*.jar staging
    - name: "Build"
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: staging      
     
  semver:
    name: semver
    runs-on: ubuntu-latest
    needs: build-artifact
    outputs:
      major: ${{ steps.semvers.outputs.major }}
      minor: ${{ steps.semvers.outputs.minor }}
      patch: ${{ steps.semvers.outputs.patch }}
    
    
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: 'Create new milestone'
        id: createmilestone
        uses: "WyriHaximus/github-action-create-milestone@v1"
        with:
          title: ${{ steps.semvers.outputs.patch }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  create-release:
    name: "release"
    runs-on: "ubuntu-latest"
    needs: semver
     
    
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: snsinahub/gh-get-current-pr@2.1.3
        id: PR
      - name: "download artifact"
        uses: actions/download-artifact@v2
        with:
          name: Package
          path: staging
      - name: print GITHUB_EVENT_PATH
        run: |
          ls -l  $GITHUB_EVENT_PATH
          cat $GITHUB_EVENT_PATH
      - name: get commit message
        id: get-commit-msg
        run: |
           echo "::set-output name=commitmsg::$(cat $GITHUB_EVENT_PATH | jq '.commits[0]["message"]')"
      - name: show commit message
        run : echo ${{ steps.get-commit-msg.outputs.commitmsg }}
      - run: echo "Your PR number is ${{ steps.PR.outputs.number }} and its BoDY is ${{ steps.PR.outputs.pr_labels }}" >> $GITHUB_STEP_SUMMARY
      - name: define semver variable
        id: semver-var
        run : |
          case ${{ steps.PR.outputs.pr_labels }} in 
            *"PATCH"*)
              echo "::set-output name=semver::${{ needs.semver.outputs.patch }}"
              ;;
            *"MINOR"*)
              echo "::set-output name=semver::${{ needs.semver.outputs.minor }}"
              ;;
            *"MAJOR"*)
              echo "::set-output name=semver::${{ needs.semver.outputs.major }}"
              ;;
          esac
          
      - name: changelog
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/tag-changelog-config.js
      - name: print changelog
        run: |
          echo "${{ steps.changelog.outputs.changes }}"
      - name: print changelog and semver
        run: |
          echo "${{ steps.changelog.outputs.changes }}"
          echo ${{ steps.semver-var.outputs.semver }}
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: staging/*.jar
          body: " Commits <br> ${{ steps.get-pr-commits.outputs.commits }} <br> ${{ steps.changelog.outputs.changes }} <br> ${{ steps.changelog.outputs.changelog }} <br> '${{ steps.PR.outputs.pr_body }}'"
          tag_name: ${{ steps.semver-var.outputs.semver }}    
      - name: print some variables
        run: |
          echo ${{ github.ref }}
 
        
